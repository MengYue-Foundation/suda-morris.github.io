<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[WenRis Blog]]></title>
  <link href="http://suda-morris.github.io/atom.xml" rel="self"/>
  <link href="http://suda-morris.github.io/"/>
  <updated>2015-05-23T20:30:31+08:00</updated>
  <id>http://suda-morris.github.io/</id>
  <author>
    <name><![CDATA[suda-morris]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[nuvoton-m451-pwm]]></title>
    <link href="http://suda-morris.github.io/blog/2015/05/23/nuvoton-m451-pwm/"/>
    <updated>2015-05-23T18:03:13+08:00</updated>
    <id>http://suda-morris.github.io/blog/2015/05/23/nuvoton-m451-pwm</id>
    <content type="html"><![CDATA[<p><img src="http://i.imgur.com/Nn7Krru.gif" alt="suda-morris" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nuvoton-M451-Timer]]></title>
    <link href="http://suda-morris.github.io/blog/2015/05/20/nuvoton-m451-timer/"/>
    <updated>2015-05-20T11:03:28+08:00</updated>
    <id>http://suda-morris.github.io/blog/2015/05/20/nuvoton-m451-timer</id>
    <content type="html"><![CDATA[<h2>新唐CortexM4内核芯片M451学习之&mdash;-定时器Timer</h2>

<blockquote><ul>
<li>4组32位定时器TIMER0~TIMER3,带24位向上计数器和一个8位的预分频器</li>
<li>支持两个中断标志：一个是<code>TIF</code>，该标志在当定时器计数器值CNT与定时器比价值CMPDAT相匹配时置位，另一个是<code>CAPIF</code>标志，该标志在当Tx_ENT管脚的变化与CAPEDGE的设置一致是置位</li>
<li>定时器计数模式：one-shot(单周期),periodic(多周期),toggle-output(翻转输出)和continuous counting(连续计数)计数模式</li>
<li>可以选择Tx管脚上的信号作为计数器CNT的时钟(外部事件计数模式)，输入事件的频率必须小于1/8PCLK。此外，Tx管脚还可作为toggle-output模式下的输出引脚</li>
<li>事件捕捉功能是当检测到Tx_EXT管脚边沿有变化时，当时的CNT值会送到CAPDAT中。Tx_EXT管脚的信号变化率必须小于1/8PCLK。如果CPU不清除CAPIF状态标志，定时器会保持TIMERx_CAP寄存器的值不变，且不会保存新的捕捉值。</li>
<li>注意当使用<code>事件计数模式</code>或者<code>事件捕捉模式</code>时候，相应定时器的时钟源必须选择为HCLK或者PCLK;CAPFUNCS为0对应事件捕捉，为1对应事件复位，即会复位CNT的值</li>
<li>注意当使用事件计数功能时候，定时器的工作模式不能设置为TIMER_TOGGLE_MODE</li>
<li>超时溢出周期 = (定时器输入时钟周期) * (8-bit PSC + 1) * (24-bit CMPDAT)</li>
</ul>
</blockquote>

<h2>API</h2>

<ul>
<li><code>TIMER_SET_CMP_VALUE(timer,u32Value)</code></li>
<li><code>TIMER_SET_PRESCALE_VALUE(timer,u32Value)</code></li>
<li><code>TIMER_IS_ACTIVE(timer)</code></li>
<li><code>TIMER_SELECT_TOUT_PIN(timer,u32ToutSel)</code></li>
<li><code>TIMER_Start(TIMER_T *timer)</code></li>
<li><code>TIMER_Stop(TIMER_T *timer)</code></li>
<li><code>TIMER_EnableWakeup(TIMER_T *timer)</code></li>
<li><code>TIMER_DisableWakeup(TIMER_T *timer)</code></li>
<li><code>TIMER_EnableCaptureDebounce(TIMER_T *timer)</code></li>
<li><code>TIMER_DisableCaptureDebounce(TIMER_T *timer)</code></li>
<li><code>TIMER_EnableEventCounterDebounce(TIMER_T *timer)</code></li>
<li><code>TIMER_DisableEventCounterDebounce(TIMER_T *timer)</code></li>
<li><code>TIMER_EnableInt(TIMER_T *timer)</code></li>
<li><code>TIMER_DisableInt(TIMER_T *timer)</code></li>
<li><code>TIMER_EnableCaptureInt(TIMER_T *timer)</code></li>
<li><code>TIMER_DisableCaptureInt(TIMER_T *timer)</code></li>
<li><code>TIMER_GetIntFlag(TIMER_T *timer)</code></li>
<li><code>TIMER_ClearIntFlag(TIMER_T *timer)</code></li>
<li><code>TIMER_GetCaptureIntFlag(TIMER_T *timer)</code></li>
<li><code>TIMER_ClearCaptureIntFlag(TIMER_T *timer)</code></li>
<li><code>TIMER_GetWakeupFlag(TIMER_T *timer)</code></li>
<li><code>TIMER_ClearWakeupFlag(TIMER_T *timer)</code></li>
<li><code>TIMER_GetCaptureData(TIMER_T *timer)</code></li>
<li><code>TIMER_GetCounter(TIMER_T *timer)</code></li>
<li><code>TIMER_Open(TIMER_T *timer,uint32_t u32Mode,uint32_t u32Freq)</code></li>
<li><code>TIMER_Close(TIMER_T *timer)</code></li>
<li><code>TIMER_Delay(TIMER_t *timer)</code></li>
<li><code>TIMER_EnableCapture(TIMER_T *timer,uint32_t u32CapMode,uint32_t u32Edge)</code></li>
<li><code>TIMER_DisableCapture(TIMER_T *timer)</code></li>
<li><code>TIMER_EnableEventCounter(TIMER_T *timer,uint32_t u32Edge)</code></li>
<li><code>TIMER_DisableEventCounter(TIMER_T *timer)</code></li>
<li><code>TIMER_GetModuleClock(TIMER_T *timer)</code></li>
</ul>


<blockquote><ul>
<li>TIMER_T *timer的取值有<code>TIMER0</code>,<code>TIMER1</code>,<code>TIMER2</code>,<code>TIMER3</code></li>
<li>u32ToutSel的取值有<code>TIMER_TOUT_PIN_FROM_TX</code>,<code>TIMER_TOUT_PIN_FROM_TX_EXT</code></li>
<li>u32CapMode的取值有<code>TIMER_CAPTURE_FREE_COUNTING_MODE</code>,<code>TIMER_CAPTURE_COUNTER_RESET_MODE</code></li>
<li>捕获模式中u32Edge的取值有<code>TIMER_CAPTURE_FALLING_EDGE</code>,<code>TIMER_CAPTURE_RISING_EDGE</code>,<code>TIMER_CAPTURE_FALLING_AND_RISING_EDGE</code></li>
<li>事件计数模式中u32Edge的取值有<code>TIMER_COUNTER_FALLING_EDGE</code>,<code>TIMER_COUNTER_RISING_EDGE</code></li>
<li>u32Mode的取值有<code>TIMER_ONESHOT_MODE</code>,<code>TIMER_PERIODIC_MODE</code>,<code>TIMER_TOGGLE_MODE</code>,<code>TIMER_CONTINUOUS_MODE</code></li>
</ul>
</blockquote>

<h2>定时器TMR0的配置程序</h2>

<figure class='code'><figcaption><span>配置TMR0:toggle-output模式，频率1000Hz(PD4实际产生的方波频率500Hz)，关闭中断</span><a href='http://suda-morris.github.io'>author</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="cm">/*Enable TMR0 ClK Source with PCLK0*/</span>
</span><span class='line'><span class="n">CLK_EnableModuleClock</span><span class="p">(</span><span class="n">TMR0_MODULE</span><span class="p">);</span>
</span><span class='line'><span class="n">CLK_SetModuleClock</span><span class="p">(</span><span class="n">TMR0_MODULE</span><span class="p">,</span><span class="n">CLK_CLKSEL1_TMR0SEL_PCLK0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="cm">/*Reset TMR0 Module*/</span>
</span><span class='line'><span class="n">SYS_ResetModule</span><span class="p">(</span><span class="n">TMR0_MODULE</span><span class="p">);</span>
</span><span class='line'><span class="cm">/*Open TMR0 Module, working at toggle mode, with Freq=1000Hz*/</span>
</span><span class='line'><span class="kt">uint32_t</span> <span class="n">real_timer0_freq</span> <span class="o">=</span> <span class="n">TIMER_Open</span><span class="p">(</span><span class="n">TIMER0</span><span class="p">,</span><span class="n">TIMER_TOGGLE_MODE</span><span class="p">,</span><span class="mi">1000</span><span class="p">);</span>
</span><span class='line'><span class="cm">/*Set PD4[PIN18] Multifuntion Pin as T0*/</span>
</span><span class='line'><span class="n">SYS</span><span class="o">-&gt;</span><span class="n">GPD_MFPL</span> <span class="o">=</span> <span class="p">(</span><span class="n">SYS</span><span class="o">-&gt;</span><span class="n">GPD_MFPL</span> <span class="o">&amp;</span> <span class="o">~</span><span class="n">SYS_GPD_MFPL_PD4MFP_Msk</span><span class="p">)</span> <span class="o">|</span> <span class="n">SYS_GPD_MFPL_PD4MFP_T0</span><span class="p">;</span>
</span><span class='line'><span class="cp">#if 0</span><span class="c"></span>
</span><span class='line'><span class="c">/*Enable Int for TMR0 Module*/</span>
</span><span class='line'><span class="c">TIMER_EnableInt(TIMER0);</span>
</span><span class='line'><span class="c">NVIC_EnableIRQ(TMR0_IRQn);</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'><span class="cm">/*Start TMR0 Module*/</span>
</span><span class='line'><span class="n">TIMER_Start</span><span class="p">(</span><span class="n">TIMER0</span><span class="p">);</span>
</span><span class='line'><span class="n">printf</span><span class="p">(</span><span class="s">&quot;Real TMR0 Freq=%dHz</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">real_timer0_freq</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>定时器TMR3的配置程序</h2>

<figure class='code'><figcaption><span>配置TMR3：toggle-output模式，频率2Hz(PD11实际产生的方波频率2Hz)，关闭中断</span><a href='http://suda-morris.github.io'>author</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="cm">/*Enable TMR3 ClK Source with PCLK1*/</span>
</span><span class='line'><span class="n">CLK_EnableModuleClock</span><span class="p">(</span><span class="n">TMR3_MODULE</span><span class="p">);</span>
</span><span class='line'><span class="n">CLK_SetModuleClock</span><span class="p">(</span><span class="n">TMR3_MODULE</span><span class="p">,</span><span class="n">CLK_CLKSEL1_TMR3SEL_PCLK1</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="cm">/*Reset TMR3 Module*/</span>
</span><span class='line'><span class="n">SYS_ResetModule</span><span class="p">(</span><span class="n">TMR3_MODULE</span><span class="p">);</span>
</span><span class='line'><span class="cm">/*Open TMR3 Module, working at toggle mode, with Freq=2Hz*/</span>
</span><span class='line'><span class="kt">uint32_t</span> <span class="n">real_timer3_freq</span> <span class="o">=</span> <span class="n">TIMER_Open</span><span class="p">(</span><span class="n">TIMER3</span><span class="p">,</span><span class="n">TIMER_TOGGLE_MODE</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'><span class="cm">/*Set PD11[PIN27] Multifuntion Pin as T3*/</span>
</span><span class='line'><span class="n">SYS</span><span class="o">-&gt;</span><span class="n">GPD_MFPH</span> <span class="o">=</span> <span class="p">(</span><span class="n">SYS</span><span class="o">-&gt;</span><span class="n">GPD_MFPH</span> <span class="o">&amp;</span> <span class="o">~</span><span class="n">SYS_GPD_MFPH_PD11MFP_Msk</span><span class="p">)</span> <span class="o">|</span> <span class="n">SYS_GPD_MFPH_PD11MFP_T3</span><span class="p">;</span>
</span><span class='line'><span class="cp">#if 0</span><span class="c"></span>
</span><span class='line'><span class="c">/*Enable Int for TMR3 Module*/</span>
</span><span class='line'><span class="c">TIMER_EnableInt(TIMER3);</span>
</span><span class='line'><span class="c">NVIC_EnableIRQ(TMR3_IRQn);</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'><span class="cm">/*Start TMR3 Module*/</span>
</span><span class='line'><span class="n">TIMER_Start</span><span class="p">(</span><span class="n">TIMER3</span><span class="p">);</span>
</span><span class='line'><span class="n">printf</span><span class="p">(</span><span class="s">&quot;Real TMR3 Freq=%dHz</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">real_timer3_freq</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://i.imgur.com/Nn7Krru.gif" alt="suda-morris" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress学习手记]]></title>
    <link href="http://suda-morris.github.io/blog/2015/05/18/think-in-octopress/"/>
    <updated>2015-05-18T13:22:49+08:00</updated>
    <id>http://suda-morris.github.io/blog/2015/05/18/think-in-octopress</id>
    <content type="html"><![CDATA[<h2>Windows下环境搭建</h2>

<ol>
<li>安装好Git，配置Git全局参数

<ul>
<li><code>git config --global user.name "suda-morris"</code></li>
<li><code>git config --global user.email "362953310@qq.com"</code></li>
<li><code>git config --global --list</code></li>
</ul>
</li>
<li>生成SSH密钥并与github关联

<ul>
<li><code>ssh-keygen -t rsa -C "362953310@qq.com"</code></li>
<li><code>将id_rsa.pub里面的内容拷贝到github中新建的SSH密钥中保存</code></li>
<li>测试是否关联成功<code>ssh -T git@github.com</code></li>
</ul>
</li>
<li>安装Ruby，安装时选择将Ruby添加到系统环境变量中</li>
<li>安装Ruby后测试是否成功,终端下使用命令<code>ruby -v</code></li>
<li>安装DevKit，进入DevKit文件夹下运行<code>ruby dk.rb init</code>和<code>ruby dk.rb install</code></li>
<li>安装Octopress源码并且设置默认主题

<ul>
<li><code>git clone git://github.com/imathis/octopress.git Octopress</code></li>
<li>修改gem的软件源<code>gem sources -a http://ruby.taobao.org</code></li>
<li>移除原始gem软件源<code>gem sources -r http://rubygems.org</code></li>
<li>打开Octopress文件夹下的Gemfile文件，将里面<code>source "http://rubygems.org"</code>修改为<code>source "http://ruby.taobao.org"</code></li>
<li>安装bundler<code>gem install bundler</code></li>
<li>安装bundler里面的软件包<code>bundle install</code></li>
</ul>
</li>
<li>安装默认主题<code>rake install</code></li>
</ol>


<h2>常用命令</h2>

<ul>
<li>新建博客                      <code>rake new_post['New Blog']</code></li>
<li>新建单页面                       <code>rake new_page['New Page']</code></li>
<li>编译生成网页                    <code>rake generate</code></li>
<li>本地服务器预览（默认4000端口）   <code>rake preview</code></li>
<li>发布网页                      <code>rake deploy</code></li>
</ul>


<h2>基本语法</h2>

<ul>
<li>一级标题      <code>#</code></li>
<li>二级标题      <code>##</code></li>
<li>三级标题      <code>###</code></li>
<li>引用            <code>&gt;</code></li>
<li>加粗            <code>**内容**</code></li>
<li>斜体            <code>*内容*</code></li>
<li>列表            <code>*</code>或者<code>-</code></li>
<li>图片            <code>！[图片的描述](链接地址)</code></li>
</ul>


<h2>优化</h2>

<ul>
<li>依次进入source目录，_includes目录，打开里面的<code>head.html</code>文件</li>
<li>替换<code>head.html</code>文件里面的jquery链接地址为<code>src="//libs.baidu.com/jquery/1.9.1/jquery.min.js"</code></li>
</ul>


<h2>参考文献</h2>

<ol>
<li><a href="http://www.appinn.com/markdown/">MarkDown中文语法详解</a></li>
<li><a href="http://wenku.baidu.com/view/1e250851240c844769eaeec6">极客学院Octopress课件</a></li>
</ol>


<p><img src="http://i.imgur.com/Nn7Krru.gif" alt="suda-morris" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hey!WenRis]]></title>
    <link href="http://suda-morris.github.io/blog/2015/05/18/hey-wenris/"/>
    <updated>2015-05-18T13:09:30+08:00</updated>
    <id>http://suda-morris.github.io/blog/2015/05/18/hey-wenris</id>
    <content type="html"><![CDATA[<h2>Hello! This is WenRis</h2>

<figure class='code'><figcaption><span>Hello WenRis for C language</span><a href='http://suda-morris.github.io'>author</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Hello WenRis</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Hello WenRis for Java language</span><a href='http://suda-morris.github.io'>author </a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">WenRis</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span>
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Hello WenRis&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://i.imgur.com/Nn7Krru.gif" alt="suda-morris" /></p>
]]></content>
  </entry>
  
</feed>
